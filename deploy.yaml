# $schema: https://github.com/deployphp/deployer/blob/master/src/schema.json

# See https://github.com/lorisleiva/laravel-deployer/blob/main/episode-7/deploy.yaml
# See https://deployer.org/docs/7.x/getting-started

import:
  - recipe/laravel.php
  - contrib/npm.php

config:
  application: 'pflonk'
  repository: 'https://github.com/michiruf/Pflonk.git'
  # This fixes errors with not being sudo or having acl installed
  # https://github.com/deployphp/deployer/issues/1506
  writable_mode: chmod

hosts:
  production:
    hostname: hidden
    port: 22
    remote_user: application
    deploy_path: '/app'
  test:
    hostname: localhost
    port: 8022
    remote_user: application
    deploy_path: '/app'
    # See https://github.com/deployphp/deployer/issues/2459
    # NOTE We could get rid of this host here, if the ssh_arguments are overridable by ./vendor/bin/dep -o ...
    ssh_arguments:
      - '-o StrictHostKeyChecking=no'
      - '-o UserKnownHostsFile=/dev/null'

tasks:
  deploy:
    - deploy:prepare
    - deploy:vendors
    - artisan:down
    - env:update
    - artisan:storage:link
    - artisan:optimize
    - artisan:migrate
    - artisan:up
    - npm:install
    - npm:build
    - deploy:publish
    - artisan:horizon:terminate
    - artisan:schedule:interrupt
    - artisan:schedule:kill
    - artisan:queue:restart
    - artisan:pulse:restart
  env:update:
    - run: /opt/docker/bin/service.d/laravel-dotenv.sh
    - desc: Apply the environment variables to laravels .env
  artisan:schedule:interrupt:
    # 'schedule:interrupt' only interrupts 'schedule:run' commands, but not 'schedule:work'
    - run: /opt/docker/bin/service.d/laravel-artisan.sh schedule:interrupt
    - desc: Interrupt the laravel scheduler
    #- cd: "{{current_path}}"
    #- run: |
    #    echo 'Interrupting laravel scheduler'
    #    php artisan schedule:interrupt
  artisan:schedule:kill:
    # The brackets are there to disable grep self matching
    - run: kill $(ps aux | grep '[a]rtisan schedule:work' | awk '{print $1}')
    - desc: Kill the laravel schedule worker
  artisan:pulse:restart:
    - run: /opt/docker/bin/service.d/laravel-artisan.sh pulse:restart
    - desc: Interrupt the laravel pulse worker
  npm:build:
    - run: cd {{release_or_current_path}} && npm run build

after:
  deploy:failed: deploy:unlock
